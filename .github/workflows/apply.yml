name: Build, Deploy with Terraform.

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'app/**'
      - 'Dockerfile'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for changes in Dockerfile or app
        id: check_changes
        run: |
          echo "Checking for changes in the Dockerfile or app folder..."
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '^(Dockerfile|app/)'
          then
            echo "::set-output name=changes_detected::true"
          else
            echo "::set-output name=changes_detected::false"
          fi

      - name: Login to Docker Hub
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.check_changes.outputs.changes_detected == 'true'
        uses: docker/build-push-action@v5
        with:
          registry: docker.io
          image: danielmagevski/app
          push: true
          tags: danielmagevski/projeto-ecs:latest

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.16.1
        with:
          image-ref: danielmagevski/projeto-ecs:v${{ github.run_number }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: 0
          severity: CRITICAL,HIGH
        
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
  


  plan-with-terraform:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check for changes in Terraform directory
        id: check_tf_changes
        run: |
          echo "Checking for changes in the Terraform directory..."
          if git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '^terraform/'
          then
            echo "::set-output name=tf_changes_detected::true"
          else
            echo "::set-output name=tf_changes_detected::false"
          fi

      - name: Setup Terraform
        if: steps.check_tf_changes.outputs.tf_changes_detected == 'true'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform format
        if: steps.check_tf_changes.outputs.tf_changes_detected == 'true'
        run: terraform fmt -check
        working-directory: terraform/

      - name: Terraform init
        if: steps.check_tf_changes.outputs.tf_changes_detected == 'true'
        run: terraform init -backend-config="bucket=${{ secrets.TF_BUCKET_NAME }}" -backend-config="key=${{ secrets.AWS_BUCKET_FILE }}"
        working-directory: terraform/

      - name: Terraform validate
        if: steps.check_tf_changes.outputs.tf_changes_detected == 'true'
        run: terraform validate -no-color
        working-directory: terraform/

      - name: Terraform Plan
        if: steps.check_tf_changes.outputs.tf_changes_detected == 'true'
        run: terraform plan
        working-directory: terraform/

    
  apply-with-terraform:
    runs-on: ubuntu-latest
    needs: plan-with-terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform init
        run: terraform init -backend-config="bucket=${{ secrets.TF_BUCKET_NAME }}" -backend-config="key=${{ secrets.AWS_BUCKET_FILE }}"
        working-directory: terraform/

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve
        working-directory: terraform/